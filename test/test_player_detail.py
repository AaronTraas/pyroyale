# coding: utf-8

"""
    Clash Royale API

    Unofficial Swagger docs for the official Clash Royale API  # noqa: E501

    OpenAPI spec version: 1.0

    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import io
import sys
import unittest

import pyroyale
from pyroyale.models.player_detail import PlayerDetail  # noqa: E501
from pyroyale.rest import ApiException


class TestPlayerDetail(unittest.TestCase):
    """PlayerDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testDefaults(self):
        model = pyroyale.models.player_detail.PlayerDetail()
        pass

    def testConstructorInitializers(self):
        model = pyroyale.models.player_detail.PlayerDetail(
            tag='tag',
            name='name',
            exp_level='exp_level',
            trophies='trophies',
            arena='arena',
            best_trophies='best_trophies',
            role='role',
            wins='wins',
            losses='losses',
            battle_count='battle_count',
            three_crown_wins='three_crown_wins',
            challenge_cards_won='challenge_cards_won',
            challenge_max_wins='challenge_max_wins',
            tournament_cards_won='tournament_cards_won',
            tournament_battle_count='tournament_battle_count',
            donations='donations',
            donations_received='donations_received',
            total_donations='total_donations',
            war_day_wins='war_day_wins',
            clan_cards_collected='clan_cards_collected',
            clan='clan',
            league_statistics='league_statistics',
            achievements='achievements',
            cards='cards',
            current_favourite_card='current_favourite_card'
        )

        assert model.tag=='tag'
        assert model.name=='name'
        assert model.exp_level=='exp_level'
        assert model.trophies=='trophies'
        assert model.arena=='arena'
        assert model.role=='role'

    def testToDict(self):
        model = pyroyale.models.player_detail.PlayerDetail(
            tag='tag',
            trophies=123,
            arena=[pyroyale.models.player_detail.PlayerDetail(name='name')]
        )

        modelDict = model.to_dict()

        assert modelDict['tag']=='tag'
        assert modelDict['trophies']==123
        assert modelDict['arena'][0]['name']=='name'

    def testToString(self):
        model = pyroyale.models.player_detail.PlayerDetail('TestStringSequence')

        modelString = model.to_str()
        assert len(modelString) > 1
        assert 'TestStringSequence' in modelString

    def testPrint(self):
        model = pyroyale.models.player_detail.PlayerDetail('TestStringSequence')

        capturedOutput = io.StringIO()
        sys.stdout = capturedOutput
        print(model)
        sys.stdout = sys.__stdout__

        testString = capturedOutput.getvalue()

        assert len(testString) > 1
        assert 'TestStringSequence' in testString


    def testEqual(self):
        model_a  = pyroyale.models.player_detail.PlayerDetail('A')
        model_a2 = pyroyale.models.player_detail.PlayerDetail('A')
        model_b  = pyroyale.models.player_detail.PlayerDetail('B')

        assert model_a == model_a
        assert model_a == model_a2
        assert model_a != model_b
        assert model_a != 'not a'

if __name__ == '__main__':
    unittest.main()
